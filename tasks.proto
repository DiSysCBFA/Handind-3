syntax = "proto3";

option go_package = "src/go/tasks";

import "google/protobuf/timestamp.proto";

package tasks;

// Define the TaskService to manage task-related operations
service TaskService {
  rpc CreateTask(CreateTaskRequest) returns (Task);
  rpc GetTask(GetTaskRequest) returns (Task);
  rpc ListTasks(ListTasksRequest) returns (stream Task);
  rpc RecordTasks(stream CreateTaskRequest) returns (TaskSummary);
  rpc TaskChat(stream TaskComment) returns (stream TaskComment);
}

// Enum to track the status of tasks
enum TaskStatus {
  TASK_STATUS_COMPLETED = 0;
  TASK_STATUS_INCOMPLETE = 1;
  TASK_STATUS_STARTED = 2;
}

// Message for each Task entity
message Task {
  string id = 1;
  string description = 3;
  string user_id = 4;
  TaskStatus status = 5;
  google.protobuf.Timestamp deadline = 6;
  google.protobuf.Timestamp created_at = 7;
  int64 lamport_timestamp = 8;              // Lamport timestamp
}

// Request for creating a new task
message CreateTaskRequest {
  string description = 1;
  string user_id = 2;
  google.protobuf.Timestamp deadline = 3;
}

// Request for retrieving a specific task
message GetTaskRequest {
  string task_id = 1;
}

// Request for listing tasks for a user
message ListTasksRequest {
  string user_id = 1;
  google.protobuf.Timestamp deadline = 2;
}

// summary after task
message TaskSummary {
  string no_of_tasks_created = 1;
}

//message for task discussion
message TaskComment {
  string task_id = 1;
  string user_id = 2;
  string comment = 3;
  google.protobuf.Timestamp created_at = 4;
  int64 lamport_timestamp = 5;  // Lamport timestamp
}
